@using BussinessObject;
@using DataAccess;
@using System.Collections;
<html>

<head>
    <!-- Load Base -->
    @RenderPage("Base.cshtml")

</head>

<body>
    <!-- Content -->
    <div class="container">
        @{
            Validation.RequireField("first_name", "Please enter a First Name");
            Validation.Add("first_name", Validator.StringLength(50,0,"First Name is too long, max characters is 50"));
            Validation.RequireField("last_name", "Please enter a Last Name");
            Validation.Add("last_name", Validator.StringLength(50, 0, "Last Name is too long, max characters is 50"));
            Validation.RequireField("user_name", "Please enter a Username");
            Validation.RequireField("password", "Please enter a Password");
            Validation.Add("password", Validator.StringLength(50, 8, "Minimum Password length is 8, max is 50"));
            Validation.RequireField("password2", "Please confirm your Password");
            Validation.Add("password2", Validator.EqualsTo("password", "Password does not match"));
            Validation.RequireField("email", "Please enter an Email");
            Validation.RequireField("user_type", "Please select a Position");

            CreateAccount account = new CreateAccount();
            //CreateAccount account;
            //GetTeams getTeams = new GetTeams();
            if (IsPost)
            {
                string inputFirstName = Request.Form["first_name"];
                string inputLastName = Request.Form["last_name"];
                string inputUsername = Request.Form["user_name"];
                string inputPassword = Request.Form["password"];
                string inputPassword2 = Request.Form["password2"];
                string inputEmail = Request.Form["email"];
                UserEnum inputUserType = UserEnum.Null;
                string schoolInput = "";
                string selectTeam = "";
                string refereeCode = "";
                if (Request["user_type"] != null)
                {
                    inputUserType = (UserEnum)(int.Parse(Request["user_type"]));
                }

                switch (inputUserType)
                {
                    case UserEnum.Null:
                        break;
                    case UserEnum.TeamMember:
                        selectTeam = Request.Form["team"];
                        break;
                    case UserEnum.SchoolRep:
                        Validation.RequireField("school_name", "Please enter a School to represent");
                        schoolInput = Request.Form["school_name"];
                        break;
                    case UserEnum.Referee:
                        refereeCode = Request.Form["referee_code"];
                        break;
                    case UserEnum.SuperReferee:
                        break;
                    default:
                        break;
                }

                if (Validation.IsValid())
                {
                    account = new CreateAccount(inputFirstName, inputLastName, inputUsername, inputPassword, inputEmail);
                    account.UserType = inputUserType;
                    switch (inputUserType)
                    {
                        case UserEnum.Null:
                            break;
                        case UserEnum.TeamMember:
                            account.TeamSelect = selectTeam;
                            break;
                        case UserEnum.SchoolRep:
                            account.SchoolInput = schoolInput;
                            break;
                        case UserEnum.Referee:
                            account.RefCode = refereeCode;
                            break;
                        case UserEnum.SuperReferee:
                            break;
                        default:
                            break;
                    }
                    string error;
                    int userID;

                    if (account.Valitate(out error, out userID))
                    {
                        //set user to be loged in code here
                        Session["UserID"] = userID;
                        Session["UserType"] = account.GetUserType(userID);
                        Response.Redirect("~/index.cshtml");

                    }
                    else
                    {
                        <p class="flow-text red lighten-2">@error</p>
                    }
                }
            }
        }
        <form class="col s12" method="post">
            <div class="row">
                <h2>Create New Account</h2>
                <p class="red-text lighten-2">@Html.ValidationMessage("school_name")</p>
            </div>
            <div class="row">
                <div class="input-field col s12 m6 l4">
                    <input name="first_name" type="text" class="validate" value="@Request.Form["first_name"]">
                    <label for="first_name">First Name</label>
                    <p class="red-text lighten-2">@Html.ValidationMessage("first_name")</p>
                </div>
                <div class="input-field col s12 m6 l4">
                    <input name="last_name" type="text" class="validate" value="@Request.Form["last_name"]">
                    <label for="last_name">Last Name</label>
                    <p class="red-text lighten-2">@Html.ValidationMessage("last_name")</p>
                </div>
                <div class="input-field col s12 m12 l4">
                    <input name="user_name" type="text" class="validate" value="@Request.Form["user_name"]">
                    <label for="user_name">Username</label>
                    <p class="red-text lighten-2">@Html.ValidationMessage("user_name")</p>
                </div>
                <div class="input-field col s12 m6 l6">
                    <input name="password" placeholder="minimum 8 char" type="password" class="validate">
                    <label for="password">Password</label>
                    <p class="red-text lighten-2">@Html.ValidationMessage("password")</p>
                </div>
                <div class="input-field col s12 m6 l6">
                    <input name="password2" type="password" class="validate">
                    <label for="password2">Confirm Password</label>
                    <p class="red-text lighten-2">@Html.ValidationMessage("password2")</p>
                </div>
                <div class="input-field col s12 m12 l12">
                    <input name="email" type="email" class="validate" value="@Request.Form["email"]">
                    <label class="col s6" for="email" data-error="please enter a valid email">Email</label>
                    <p class="red-text lighten-2">@Html.ValidationMessage("email")</p>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    <select name="user_type" class="validate" required="" onchange="test(this)">
                        <option value="0" disabled selected>Select a position</option>
                        <option value="@((int)UserEnum.TeamMember)">Team Member</option>
                        <option value="@((int)UserEnum.SchoolRep)">School Representative</option>
                        <option value="@((int)UserEnum.Referee)">Referee</option>
                    </select>
                    <label for="user_type">User Account</label>
                    <p class="red-text lighten-2">@Html.ValidationMessage("user_type")</p>
                </div>
            </div>

            <!-- Only for Team Members -->


            <div class="row " id="team_members">
                <div class="input-field col s12 m12 l12">
                    <select name="team">
                        <option value="0" disabled selected>Select a Team</option>
                        @{
                            List<string> teams = account.GetTeams();
                            for (int i = 0; i < teams.Count; i++)
                            {
                                <option value="@teams[i]">@teams[i]</option>
                            }
                        }
                    </select>
                    <label>Team</label>
                </div>
            </div>



            <!-- Only for Representatives Members -->

            <div class="row " id="representative_members">
                <div class="input-field col s12 m12 l12">
                    <input name="school_name" type="text" class="validate">
                    <label for="school_name">Enter your School</label>
                </div>
            </div>



            <!-- Only for Referee Members -->

            <div class="row " id="referee_members">
                <div class="input-field col s12 m12 l12">
                    <input name="referee_code" type="text" class="validate">
                    <label for="referee_code">Enter provided referee code</label>
                </div>
            </div>

            <!-- Javascript for switching from different user types -->
            <script type="text/javascript">
                document.getElementById("team_members").style.display = "none";
                document.getElementById("representative_members").style.display = "none";
                document.getElementById("referee_members").style.display = "none";

                window.test = function (e) {
                    if (e.value == "@((int)UserEnum.TeamMember)") {
                        document.getElementById("team_members").style.display = "";
                        document.getElementById("representative_members").style.display = "none";
                        document.getElementById("referee_members").style.display = "none";
                    }
                    else if (e.value == "@((int)UserEnum.SchoolRep)") {
                        document.getElementById("representative_members").style.display = "";
                        document.getElementById("referee_members").style.display = "none";
                        document.getElementById("team_members").style.display = "none";


                    }
                    else if (e.value == "@((int)UserEnum.Referee)") {
                        document.getElementById("referee_members").style.display = "";
                        document.getElementById("team_members").style.display = "none";
                        document.getElementById("representative_members").style.display = "none";
                    }
                }

            </script>

            <!-- Submit button -->

            <div class="row ">
                <div class="col offset-s4 offset-m8 offset-l10">
                    <button class="btn waves-effect waves-light" type="submit" name="action">Create</button>
                </div>
            </div>

        </form>
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            $('select').material_select();
        });
    </script>
    @RenderPage("footer.cshtml")
</body>

</html>